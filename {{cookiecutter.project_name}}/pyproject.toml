# https://peps.python.org/pep-0517/
[build-system]
{% if cookiecutter.version_control == 'setuptools-scm' -%}
requires = ["setuptools>=45", "wheel", "setuptools-scm>=6.2"]
{%- else -%}
requires = ["setuptools>=45", "wheel"]
{%- endif %}
build-backend = "setuptools.build_meta"

# https://peps.python.org/pep-0621/
[project]
name = "{{cookiecutter.project_name}}"
description = "{{ cookiecutter.project_short_description }}"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "BSD 3-Clause License"}
authors = [
  {email = "{{cookiecutter.email}}"},
  {name = "{{cookiecutter.full_name}}"},
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "License :: OSI Approved :: BSD License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
]
dynamic = ["version"]
dependencies = []

# extras
# https://peps.python.org/pep-0621/#dependencies-optional-dependencies
[project.optional-dependencies]
test = ["pytest>=6.0", "pytest-cov"]
dev = [
    "black",
    "ipython",
    "mypy",
    "pdbpp",
    "pre-commit",
    "pytest-cov",
    "pytest",
    "rich",
    "ruff",
]

[project.urls]
homepage = "https://github.com/{{cookiecutter.github_username}}/{{cookiecutter.project_name}}"
repository = "https://github.com/{{cookiecutter.github_username}}/{{cookiecutter.project_name}}"

# same as console_scripts entry point
# [project.scripts]
# spam-cli = "spam:main_cli"

# Entry points
# https://peps.python.org/pep-0621/#entry-points
# [project.entry-points."spam.magical"]
# tomatoes = "spam:main_tomatoes"

# https://setuptools.pypa.io/en/latest/userguide/pyproject_config.html
[tool.setuptools]
zip-safe = false
include-package-data = true
packages = {find = {where = ["src"], exclude=[]}}

[tool.setuptools.package-data]
"*" = ["py.typed"]

{% if cookiecutter.version_control == 'setuptools-scm' %}
# https://github.com/pypa/setuptools_scm/#pyprojecttoml-usage
[tool.setuptools_scm]
{%- endif %}

# https://github.com/charliermarsh/ruff
[tool.ruff]
line-length = 88
# select = ["E", "F"]  # default
target-version = "py38"
extend-select = [
    "D",    # pydocstyle
    "I001", # isort
    "U",    # pyupgrade
    # "N",  # pep8-naming
    "S",    # bandit
    "C",    # flake8-comprehensions
    "B",    # flake8-bugbear
    "A",    # flake8-builtins
    "RUF",  # ruff-specific rules
    "M001", # Unused noqa directive
]
extend-ignore = [
    "D100", # Missing docstring in public module
    "D107", # Missing docstring in __init__
    "D203", # 1 blank line required before class docstring
    "D212", # Multi-line docstring summary should start at the first line
    "D213", # Multi-line docstring summary should start at the second line
    "D413", # Missing blank line after last section
    "D416", # Section name should end with a colon
]

[tool.ruff.per-file-ignores]
"tests/*.py" = ["D"]

# https://docs.pytest.org/en/6.2.x/customize.html
[tool.pytest.ini_options]
minversion = "6.0"
testpaths = ["tests"]
filterwarnings = [
    "error",
]

# https://mypy.readthedocs.io/en/stable/config_file.html
[tool.mypy]
files = "src/**/"
strict = true
disallow_any_generics = false
disallow_subclassing_any = false
show_error_codes = true
pretty = true


# https://coverage.readthedocs.io/en/6.4/config.html
[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "if TYPE_CHECKING:",
    "@overload",
    "except ImportError",
]

# https://github.com/mgedmin/check-manifest#configuration
[tool.check-manifest]
ignore = [
    ".github_changelog_generator",
    ".pre-commit-config.yaml",
    ".ruff_cache/**/*",
    "tests/**/*",
    "tox.ini",
]

# https://python-semantic-release.readthedocs.io/en/latest/configuration.html
[tool.semantic_release]
version_source = "tag_only"
branch = "main"
changelog_sections="feature,fix,breaking,documentation,performance,chore,:boom:,:sparkles:,:children_crossing:,:lipstick:,:iphone:,:egg:,:chart_with_upwards_trend:,:ambulance:,:lock:,:bug:,:zap:,:goal_net:,:alien:,:wheelchair:,:speech_balloon:,:mag:,:apple:,:penguin:,:checkered_flag:,:robot:,:green_apple:,Other"
# commit_parser=semantic_release.history.angular_parser
build_command = "pip install build && python -m build"
