{%- set license_classifiers = {
    'MIT license': 'License :: OSI Approved :: MIT License',
    'BSD license': 'License :: OSI Approved :: BSD License',
} %}
[metadata]
name = {{cookiecutter.project_name}}
url = https://github.com/{{cookiecutter.github_username}}/{{cookiecutter.project_name}}
author = {{cookiecutter.full_name}}
author_email = {{cookiecutter.email}}
description = {{ cookiecutter.project_short_description }}
long_description = file: README.md
long_description_content_type = text/markdown
license = {{ cookiecutter.license }}
classifiers =
    Development Status :: 2 - Pre-Alpha
{%- if cookiecutter.license in license_classifiers %}
    {{ license_classifiers[cookiecutter.license] }}
{%- endif %}
    Natural Language :: English
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3.8
    Programming Language :: Python :: 3.9
    Programming Language :: Python :: 3.10
project_urls =
    Source Code =https://github.com/{{cookiecutter.github_username}}/{{cookiecutter.project_name}}

[options]
zip_safe = False
packages = find:
include_package_data = True
python_requires = >=3.8
; install_requires =
    ; numpy

[options.extras_require]
testing =
    tox
    tox-conda
    pytest
    pytest-cov
dev =
    ipython
    jedi<0.18.0
    black
    flake8
    flake8-docstrings
    isort
    mypy
    pre-commit
    pydocstyle
    pytest

[bdist_wheel]
universal = 1

[flake8]
exclude = docs,_version.py,.eggs,examples
max-line-length = 88
docstring-convention = numpy
ignore =  D100, D213, D401, D413, D107, W503

[isort]
profile = black
src_paths = {{cookiecutter.project_slug}}

[pydocstyle]
match_dir = {{cookiecutter.project_slug}}
convention = numpy
add_select = D402,D415,D417
ignore = D100, D213, D401, D413, D107

[tool:pytest]
addopts = -W error

[mypy]
files = {{cookiecutter.project_slug}}
warn_unused_configs = True
warn_unused_ignores = True
check_untyped_defs = True
implicit_reexport = False
# this is strict!
# disallow_untyped_defs = True
show_column_numbers = True
show_error_codes = True
ignore_missing_imports = True
